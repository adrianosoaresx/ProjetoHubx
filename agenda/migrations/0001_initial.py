# Generated by Django 5.2.5 on 2025-08-08 18:44

import django.core.serializers.json
import django.core.validators
import django.db.models.deletion
import django_extensions.db.fields
import simple_history.models
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("chat", "0001_initial"),
        ("empresas", "0001_initial"),
        ("nucleos", "0001_initial"),
        ("organizacoes", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Evento",
            fields=[
                ("deleted", models.BooleanField(default=False)),
                ("deleted_at", models.DateTimeField(blank=True, null=True)),
                (
                    "created",
                    django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name="created"),
                ),
                (
                    "modified",
                    django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name="modified"),
                ),
                ("id", models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ("titulo", models.CharField(max_length=150)),
                ("descricao", models.TextField()),
                ("data_inicio", models.DateTimeField()),
                ("data_fim", models.DateTimeField()),
                ("local", models.CharField(max_length=255)),
                (
                    "cidade",
                    models.CharField(
                        max_length=100,
                        validators=[django.core.validators.RegexValidator("^[A-Za-zÀ-ÿ\\s-]+$", "Cidade inválida")],
                    ),
                ),
                (
                    "estado",
                    models.CharField(
                        max_length=2, validators=[django.core.validators.RegexValidator("^[A-Z]{2}$", "UF inválida")]
                    ),
                ),
                (
                    "cep",
                    models.CharField(
                        max_length=9,
                        validators=[django.core.validators.RegexValidator("^\\d{5}-\\d{3}$", "CEP inválido")],
                    ),
                ),
                (
                    "status",
                    models.PositiveSmallIntegerField(choices=[(0, "Ativo"), (1, "Concluído"), (2, "Cancelado")]),
                ),
                (
                    "publico_alvo",
                    models.PositiveSmallIntegerField(
                        choices=[(0, "Público"), (1, "Somente nucleados"), (2, "Apenas associados")]
                    ),
                ),
                ("numero_convidados", models.PositiveIntegerField()),
                ("numero_presentes", models.PositiveIntegerField()),
                ("valor_ingresso", models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True)),
                ("orcamento", models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ("orcamento_estimado", models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ("valor_gasto", models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ("participantes_maximo", models.PositiveIntegerField(blank=True, null=True)),
                ("espera_habilitada", models.BooleanField(default=False)),
                ("cronograma", models.TextField(blank=True)),
                ("informacoes_adicionais", models.TextField(blank=True)),
                ("contato_nome", models.CharField(max_length=100)),
                ("contato_email", models.EmailField(blank=True, max_length=254)),
                ("contato_whatsapp", models.CharField(blank=True, max_length=15)),
                ("avatar", models.ImageField(blank=True, null=True, upload_to="eventos/avatars/")),
                ("cover", models.ImageField(blank=True, null=True, upload_to="eventos/capas/")),
                ("briefing", models.TextField(blank=True, null=True)),
                (
                    "coordenador",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="eventos_criados",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "mensagem_origem",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="eventos_criados",
                        to="chat.chatmessage",
                    ),
                ),
                (
                    "nucleo",
                    models.ForeignKey(
                        blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to="nucleos.nucleo"
                    ),
                ),
                (
                    "organizacao",
                    models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="organizacoes.organizacao"),
                ),
            ],
            options={
                "verbose_name": "Evento",
                "verbose_name_plural": "Eventos",
            },
        ),
        migrations.CreateModel(
            name="BriefingEvento",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("deleted", models.BooleanField(default=False)),
                ("deleted_at", models.DateTimeField(blank=True, null=True)),
                (
                    "created",
                    django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name="created"),
                ),
                (
                    "modified",
                    django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name="modified"),
                ),
                ("objetivos", models.TextField()),
                ("publico_alvo", models.TextField()),
                ("requisitos_tecnicos", models.TextField()),
                ("cronograma_resumido", models.TextField(blank=True)),
                ("conteudo_programatico", models.TextField(blank=True)),
                ("observacoes", models.TextField(blank=True)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("rascunho", "Rascunho"),
                            ("orcamentado", "Orçamentado"),
                            ("aprovado", "Aprovado"),
                            ("recusado", "Recusado"),
                        ],
                        default="rascunho",
                        max_length=15,
                    ),
                ),
                ("orcamento_enviado_em", models.DateTimeField(blank=True, null=True)),
                ("aprovado_em", models.DateTimeField(blank=True, null=True)),
                ("recusado_em", models.DateTimeField(blank=True, null=True)),
                ("motivo_recusa", models.TextField(blank=True)),
                ("coordenadora_aprovou", models.BooleanField(default=False)),
                ("prazo_limite_resposta", models.DateTimeField(blank=True, null=True)),
                ("avaliado_em", models.DateTimeField(blank=True, null=True)),
                (
                    "avaliado_por",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="briefings_avaliados",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "recusado_por",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="briefings_recusados",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                ("evento", models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="agenda.evento")),
            ],
            options={
                "verbose_name": "Briefing de Evento",
                "ordering": ["evento"],
            },
        ),
        migrations.CreateModel(
            name="EventoLog",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("deleted", models.BooleanField(default=False)),
                ("deleted_at", models.DateTimeField(blank=True, null=True)),
                (
                    "created",
                    django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name="created"),
                ),
                (
                    "modified",
                    django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name="modified"),
                ),
                ("acao", models.CharField(max_length=50)),
                (
                    "detalhes",
                    models.JSONField(blank=True, default=dict, encoder=django.core.serializers.json.DjangoJSONEncoder),
                ),
                (
                    "evento",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, related_name="logs", to="agenda.evento"
                    ),
                ),
                (
                    "usuario",
                    models.ForeignKey(
                        blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL
                    ),
                ),
            ],
            options={
                "ordering": ["-created"],
            },
        ),
        migrations.CreateModel(
            name="HistoricalFeedbackNota",
            fields=[
                ("id", models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name="ID")),
                ("deleted", models.BooleanField(default=False)),
                ("deleted_at", models.DateTimeField(blank=True, null=True)),
                (
                    "created",
                    django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name="created"),
                ),
                (
                    "modified",
                    django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name="modified"),
                ),
                (
                    "nota",
                    models.PositiveSmallIntegerField(
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(5),
                        ]
                    ),
                ),
                ("comentario", models.TextField(blank=True)),
                ("data_feedback", models.DateTimeField(blank=True, editable=False)),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")], max_length=1),
                ),
                (
                    "evento",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="agenda.evento",
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "usuario",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "historical Feedback de Nota",
                "verbose_name_plural": "historical Feedbacks de Notas",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="MaterialDivulgacaoEvento",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("deleted", models.BooleanField(default=False)),
                ("deleted_at", models.DateTimeField(blank=True, null=True)),
                (
                    "created",
                    django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name="created"),
                ),
                (
                    "modified",
                    django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name="modified"),
                ),
                ("titulo", models.CharField(max_length=255)),
                ("descricao", models.TextField(blank=True)),
                (
                    "tipo",
                    models.CharField(
                        choices=[("banner", "Banner"), ("flyer", "Flyer"), ("video", "Vídeo"), ("outro", "Outro")],
                        max_length=20,
                    ),
                ),
                ("arquivo", models.FileField(upload_to="eventos/divulgacao/")),
                ("imagem_thumb", models.ImageField(blank=True, null=True, upload_to="eventos/divulgacao/thumbs/")),
                ("data_publicacao", models.DateField(auto_now_add=True)),
                ("tags", models.CharField(blank=True, max_length=255)),
                (
                    "status",
                    models.CharField(
                        choices=[("criado", "Criado"), ("aprovado", "Aprovado"), ("devolvido", "Devolvido")],
                        default="criado",
                        max_length=10,
                    ),
                ),
                ("avaliado_em", models.DateTimeField(blank=True, null=True)),
                ("motivo_devolucao", models.TextField(blank=True)),
                (
                    "avaliado_por",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="materiais_avaliados",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                ("evento", models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="agenda.evento")),
            ],
            options={
                "verbose_name": "Material de Divulgação de Evento",
                "verbose_name_plural": "Materiais de Divulgação de Eventos",
            },
        ),
        migrations.CreateModel(
            name="ParceriaEvento",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("deleted", models.BooleanField(default=False)),
                ("deleted_at", models.DateTimeField(blank=True, null=True)),
                (
                    "created",
                    django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name="created"),
                ),
                (
                    "modified",
                    django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name="modified"),
                ),
                (
                    "cnpj",
                    models.CharField(
                        max_length=14, validators=[django.core.validators.RegexValidator("^\\d{14}$", "CNPJ inválido")]
                    ),
                ),
                ("contato", models.CharField(max_length=150)),
                ("representante_legal", models.CharField(max_length=150)),
                (
                    "tipo_parceria",
                    models.CharField(
                        choices=[
                            ("patrocinio", "Patrocínio"),
                            ("mentoria", "Mentoria"),
                            ("mantenedor", "Mantenedor"),
                            ("outro", "Outro"),
                        ],
                        default="patrocinio",
                        max_length=20,
                    ),
                ),
                ("acordo", models.FileField(blank=True, null=True, upload_to="parcerias/contratos/")),
                ("data_inicio", models.DateField()),
                ("data_fim", models.DateField()),
                ("descricao", models.TextField(blank=True)),
                (
                    "avaliacao",
                    models.PositiveSmallIntegerField(
                        blank=True,
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(5),
                        ],
                    ),
                ),
                ("comentario", models.TextField(blank=True)),
                (
                    "empresa",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT, related_name="parcerias", to="empresas.empresa"
                    ),
                ),
                ("evento", models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="agenda.evento")),
                (
                    "nucleo",
                    models.ForeignKey(
                        blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to="nucleos.nucleo"
                    ),
                ),
            ],
            options={
                "verbose_name": "Parceria de Evento",
                "verbose_name_plural": "Parcerias de Eventos",
                "ordering": ["-data_inicio"],
            },
        ),
        migrations.CreateModel(
            name="Tarefa",
            fields=[
                ("deleted", models.BooleanField(default=False)),
                ("deleted_at", models.DateTimeField(blank=True, null=True)),
                (
                    "created",
                    django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name="created"),
                ),
                (
                    "modified",
                    django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name="modified"),
                ),
                ("id", models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ("titulo", models.CharField(max_length=150)),
                ("descricao", models.TextField(blank=True)),
                ("data_inicio", models.DateTimeField()),
                ("data_fim", models.DateTimeField()),
                (
                    "status",
                    models.CharField(
                        choices=[("pendente", "Pendente"), ("concluida", "Concluída")],
                        default="pendente",
                        max_length=20,
                    ),
                ),
                (
                    "mensagem_origem",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="tarefas",
                        to="chat.chatmessage",
                    ),
                ),
                (
                    "nucleo",
                    models.ForeignKey(
                        blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to="nucleos.nucleo"
                    ),
                ),
                (
                    "organizacao",
                    models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="organizacoes.organizacao"),
                ),
                (
                    "responsavel",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="tarefas_criadas",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Tarefa",
                "verbose_name_plural": "Tarefas",
            },
        ),
        migrations.CreateModel(
            name="TarefaLog",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("deleted", models.BooleanField(default=False)),
                ("deleted_at", models.DateTimeField(blank=True, null=True)),
                (
                    "created",
                    django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name="created"),
                ),
                (
                    "modified",
                    django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name="modified"),
                ),
                ("acao", models.CharField(max_length=50)),
                (
                    "detalhes",
                    models.JSONField(blank=True, default=dict, encoder=django.core.serializers.json.DjangoJSONEncoder),
                ),
                (
                    "tarefa",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, related_name="logs", to="agenda.tarefa"
                    ),
                ),
                (
                    "usuario",
                    models.ForeignKey(
                        blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL
                    ),
                ),
            ],
            options={
                "verbose_name": "Log de Tarefa",
                "verbose_name_plural": "Logs de Tarefa",
                "ordering": ["-created"],
            },
        ),
        migrations.CreateModel(
            name="FeedbackNota",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("deleted", models.BooleanField(default=False)),
                ("deleted_at", models.DateTimeField(blank=True, null=True)),
                (
                    "created",
                    django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name="created"),
                ),
                (
                    "modified",
                    django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name="modified"),
                ),
                (
                    "nota",
                    models.PositiveSmallIntegerField(
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(5),
                        ]
                    ),
                ),
                ("comentario", models.TextField(blank=True)),
                ("data_feedback", models.DateTimeField(auto_now_add=True)),
                (
                    "evento",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, related_name="feedbacks", to="agenda.evento"
                    ),
                ),
                (
                    "usuario",
                    models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
                ),
            ],
            options={
                "verbose_name": "Feedback de Nota",
                "verbose_name_plural": "Feedbacks de Notas",
                "unique_together": {("usuario", "evento")},
            },
        ),
        migrations.CreateModel(
            name="InscricaoEvento",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("deleted", models.BooleanField(default=False)),
                ("deleted_at", models.DateTimeField(blank=True, null=True)),
                (
                    "created",
                    django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name="created"),
                ),
                (
                    "modified",
                    django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name="modified"),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[("pendente", "Pendente"), ("confirmada", "Confirmada"), ("cancelada", "Cancelada")],
                        default="pendente",
                        max_length=10,
                    ),
                ),
                ("presente", models.BooleanField(default=False)),
                ("valor_pago", models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True)),
                (
                    "metodo_pagamento",
                    models.CharField(
                        blank=True,
                        choices=[("pix", "Pix"), ("boleto", "Boleto"), ("gratuito", "Gratuito"), ("outro", "Outro")],
                        max_length=20,
                        null=True,
                    ),
                ),
                ("comprovante_pagamento", models.FileField(blank=True, null=True, upload_to="eventos/comprovantes/")),
                ("observacao", models.TextField(blank=True)),
                ("data_confirmacao", models.DateTimeField(blank=True, null=True)),
                ("qrcode_url", models.URLField(blank=True, null=True)),
                ("check_in_realizado_em", models.DateTimeField(blank=True, null=True)),
                ("posicao_espera", models.PositiveIntegerField(blank=True, null=True)),
                (
                    "avaliacao",
                    models.PositiveSmallIntegerField(
                        blank=True,
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(5),
                        ],
                    ),
                ),
                ("feedback", models.TextField(blank=True)),
                (
                    "evento",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, related_name="inscricoes", to="agenda.evento"
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="inscricoes",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "unique_together": {("user", "evento")},
            },
        ),
    ]
